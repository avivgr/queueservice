/* Create queue */
enum Status
{
	SUCCESS = 0;
	NOTFOUND = 1;
	NO_MEM = 2;
	BUSY = 3;
}

message CreateQueueRequest {
  required string name = 1;
}

message CreateQueueResponse {
  required string queueid = 1;
}

/* Get queue */
message GetQueueRequest {
  required string name = 1;
}

message GetQueueResponse {
  required string queueid = 1;
}

/* delete queue */
message DelQueueRequest {
  required string queueid = 1;
}

message DelQueueResponse {
  required Status status = 1;
}

/* Enqueue */
message EnqueueRequest {
  required string queueid = 1;
  required bytes data = 2;
}

message EnqueueResponse {
    required Status status = 1;
}

/* Read */
message ReadRequest {
  required string queueid = 1;
  required int32 timeout = 2;
}

message ReadResponse {
  required string queueid = 1;
  required string queueentitiyid = 2;
  required bytes data = 3;
}

/* Dequeue */
message DequeueRequest {
  required string queueid = 1;
  required string queueentitiyid = 2;
}

message DequeueResponse {
    required Status status = 1;
}

message Request
{
	enum ReqType
	{
		CREATE_QUEUE = 1;
		GET_QUEUE = 2;
		DEL_QUEUE = 3;
		ENQUEUE = 4;
		READ = 5;
		DEQUEUE = 6;
	}

	required ReqType type = 1;
	optional CreateQueueRequest createQueue = 2;
	optional GetQueueRequest getQueue = 3;
	optional DelQueueRequest delQueue = 4;
	optional EnqueueRequest enqueue = 5;
	optional ReadRequest read = 6;
	optional DequeueRequest dequeue = 7; 
}

message Response
{
	enum RespType
	{
		CREATE_QUEUE = 1;
		GET_QUEUE = 2;
		DEL_QUEUE = 3;
		ENQUEUE = 4;
		READ = 5;
		DEQUEUE = 6;
	}

	required RespType type = 1;
	optional CreateQueueResponse createQueue = 2;
	optional GetQueueResponse getQueue = 3;
	optional DelQueueResponse delQueue = 4;
	optional EnqueueResponse enqueue = 5;
	optional ReadResponse read = 6;
	optional DequeueResponse dequeue = 7; 
}


